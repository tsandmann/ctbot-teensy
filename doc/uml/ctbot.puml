@startuml ctbot

namespace ctbot {
    class CtBot {
        +~CtBot()
        +{static} get_instance() : CtBot&
        +get_comm() : CommInterface*
        +get_lcd() : Display*
        +get_leds() : Leds*
        +get_scheduler() : Scheduler*
        +get_sensors() : Sensors*
        +get_serial_usb_conn() : SerialConnectionTeensy*
        +get_servos() : Servo*[2]
        +get_speedcontrols() : SpeedControl*[2]
        +play_wav(const std::string& filename) : bool
        +setup() : void
        +stop() : void
        #CtBot()
        #init_parser() : void
        #run() : void
        #shutdown() : void
        #{static} usage_text : const char[]
        #p_audio_conn_ : AudioConnection*
        #p_audio_mixer_ : AudioMixer4*
        #p_audio_output_ : AudioOutputAnalog*
        #p_comm_ : CommInterface*
        #p_lcd_ : Display*
        #p_leds_ : Leds*
        #p_motors_ : Motor*
        #p_parameter_ : ParameterStorage*
        #p_parser_ : CmdParser*
        #p_play_wav_ : AudioPlaySdWav*
        #p_scheduler_ : Scheduler*
        #p_sensors_ : Sensors*
        #p_serial_usb_ : SerialConnectionTeensy*
        #p_serial_wifi_ : SerialConnectionTeensy*
        #p_servos_ : Servo*
        #p_speedcontrols_ : SpeedControl*
        #p_swd_debugger_ : ARMKinetisDebug*
        #p_tts_ : TTS*
        #shutdown_ : bool
        #task_id_ : uint16_t
    }

    CtBot o-- CmdParser
    CtBot o-- CommInterface
    CtBot o-- Display
    CtBot o-- Leds
    CtBot o-- Motor
    CtBot o-- ParameterStorage
    CtBot o-- Scheduler
    CtBot o-- Sensors
    CtBot "2" o-- SerialConnectionTeensy
    CtBot o-- Servo
    CtBot o-- SpeedControl

}

@enduml
